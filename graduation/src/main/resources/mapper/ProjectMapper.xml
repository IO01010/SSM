<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.abc.graduationproject.dao.ProjectMapper">
  <resultMap id="BaseResultMap" type="com.abc.graduationproject.bean.Project">
    <id column="projectId" jdbcType="INTEGER" property="projectid" />
    <result column="projectName" jdbcType="VARCHAR" property="projectname" />
    <result column="promulgateName" jdbcType="VARCHAR" property="promulgatename" />
    <result column="projectIntroduce" jdbcType="VARCHAR" property="projectintroduce" />
    <result column="isNotValid" jdbcType="BIT" property="isnotvalid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    projectId, projectName, promulgateName, projectIntroduce, isNotValid
  </sql>
  <select id="selectByExample" parameterType="com.abc.graduationproject.bean.ProjectExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from project
    where projectId = #{projectid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from project
    where projectId = #{projectid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.abc.graduationproject.bean.ProjectExample">
    delete from project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.abc.graduationproject.bean.Project">
    insert into project (projectId, projectName, promulgateName, 
      projectIntroduce, isNotValid)
    values (#{projectid,jdbcType=INTEGER}, #{projectname,jdbcType=VARCHAR}, #{promulgatename,jdbcType=VARCHAR}, 
      #{projectintroduce,jdbcType=VARCHAR}, #{isnotvalid,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.abc.graduationproject.bean.Project">
    insert into project
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="projectid != null">
        projectId,
      </if>
      <if test="projectname != null">
        projectName,
      </if>
      <if test="promulgatename != null">
        promulgateName,
      </if>
      <if test="projectintroduce != null">
        projectIntroduce,
      </if>
      <if test="isnotvalid != null">
        isNotValid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="projectid != null">
        #{projectid,jdbcType=INTEGER},
      </if>
      <if test="projectname != null">
        #{projectname,jdbcType=VARCHAR},
      </if>
      <if test="promulgatename != null">
        #{promulgatename,jdbcType=VARCHAR},
      </if>
      <if test="projectintroduce != null">
        #{projectintroduce,jdbcType=VARCHAR},
      </if>
      <if test="isnotvalid != null">
        #{isnotvalid,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.abc.graduationproject.bean.ProjectExample" resultType="java.lang.Long">
    select count(*) from project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update project
    <set>
      <if test="record.projectid != null">
        projectId = #{record.projectid,jdbcType=INTEGER},
      </if>
      <if test="record.projectname != null">
        projectName = #{record.projectname,jdbcType=VARCHAR},
      </if>
      <if test="record.promulgatename != null">
        promulgateName = #{record.promulgatename,jdbcType=VARCHAR},
      </if>
      <if test="record.projectintroduce != null">
        projectIntroduce = #{record.projectintroduce,jdbcType=VARCHAR},
      </if>
      <if test="record.isnotvalid != null">
        isNotValid = #{record.isnotvalid,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update project
    set projectId = #{record.projectid,jdbcType=INTEGER},
      projectName = #{record.projectname,jdbcType=VARCHAR},
      promulgateName = #{record.promulgatename,jdbcType=VARCHAR},
      projectIntroduce = #{record.projectintroduce,jdbcType=VARCHAR},
      isNotValid = #{record.isnotvalid,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.abc.graduationproject.bean.Project">
    update project
    <set>
      <if test="projectname != null">
        projectName = #{projectname,jdbcType=VARCHAR},
      </if>
      <if test="promulgatename != null">
        promulgateName = #{promulgatename,jdbcType=VARCHAR},
      </if>
      <if test="projectintroduce != null">
        projectIntroduce = #{projectintroduce,jdbcType=VARCHAR},
      </if>
      <if test="isnotvalid != null">
        isNotValid = #{isnotvalid,jdbcType=BIT},
      </if>
    </set>
    where projectId = #{projectid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.abc.graduationproject.bean.Project">
    update project
    set projectName = #{projectname,jdbcType=VARCHAR},
      promulgateName = #{promulgatename,jdbcType=VARCHAR},
      projectIntroduce = #{projectintroduce,jdbcType=VARCHAR},
      isNotValid = #{isnotvalid,jdbcType=BIT}
    where projectId = #{projectid,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.abc.graduationproject.bean.Project">
    <result column="projectId" jdbcType="INTEGER" property="projectid" />
    <result column="projectName" jdbcType="VARCHAR" property="projectname" />
    <result column="promulgateName" jdbcType="VARCHAR" property="promulgatename" />
    <result column="projectIntroduce" jdbcType="VARCHAR" property="projectintroduce" />
    <result column="isNotValid" jdbcType="BIT" property="isnotvalid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    projectId, projectName, promulgateName, projectIntroduce, isNotValid
  </sql>
  <select id="selectByExample" parameterType="com.abc.graduationproject.bean.ProjectExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.abc.graduationproject.bean.ProjectExample">
    delete from project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.abc.graduationproject.bean.Project">
    insert into project (projectId, projectName, promulgateName, 
      projectIntroduce, isNotValid)
    values (#{projectid,jdbcType=INTEGER}, #{projectname,jdbcType=VARCHAR}, #{promulgatename,jdbcType=VARCHAR}, 
      #{projectintroduce,jdbcType=VARCHAR}, #{isnotvalid,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.abc.graduationproject.bean.Project">
    insert into project
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="projectid != null">
        projectId,
      </if>
      <if test="projectname != null">
        projectName,
      </if>
      <if test="promulgatename != null">
        promulgateName,
      </if>
      <if test="projectintroduce != null">
        projectIntroduce,
      </if>
      <if test="isnotvalid != null">
        isNotValid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="projectid != null">
        #{projectid,jdbcType=INTEGER},
      </if>
      <if test="projectname != null">
        #{projectname,jdbcType=VARCHAR},
      </if>
      <if test="promulgatename != null">
        #{promulgatename,jdbcType=VARCHAR},
      </if>
      <if test="projectintroduce != null">
        #{projectintroduce,jdbcType=VARCHAR},
      </if>
      <if test="isnotvalid != null">
        #{isnotvalid,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.abc.graduationproject.bean.ProjectExample" resultType="java.lang.Long">
    select count(*) from project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update project
    <set>
      <if test="record.projectid != null">
        projectId = #{record.projectid,jdbcType=INTEGER},
      </if>
      <if test="record.projectname != null">
        projectName = #{record.projectname,jdbcType=VARCHAR},
      </if>
      <if test="record.promulgatename != null">
        promulgateName = #{record.promulgatename,jdbcType=VARCHAR},
      </if>
      <if test="record.projectintroduce != null">
        projectIntroduce = #{record.projectintroduce,jdbcType=VARCHAR},
      </if>
      <if test="record.isnotvalid != null">
        isNotValid = #{record.isnotvalid,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update project
    set projectId = #{record.projectid,jdbcType=INTEGER},
      projectName = #{record.projectname,jdbcType=VARCHAR},
      promulgateName = #{record.promulgatename,jdbcType=VARCHAR},
      projectIntroduce = #{record.projectintroduce,jdbcType=VARCHAR},
      isNotValid = #{record.isnotvalid,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="com.abc.graduationproject.bean.Project">
    <result column="projectId" jdbcType="INTEGER" property="projectid" />
    <result column="projectName" jdbcType="VARCHAR" property="projectname" />
    <result column="promulgateName" jdbcType="VARCHAR" property="promulgatename" />
    <result column="projectIntroduce" jdbcType="VARCHAR" property="projectintroduce" />
    <result column="isNotValid" jdbcType="BIT" property="isnotvalid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    projectId, projectName, promulgateName, projectIntroduce, isNotValid
  </sql>
  <select id="selectByExample" parameterType="com.abc.graduationproject.bean.ProjectExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.abc.graduationproject.bean.ProjectExample">
    delete from project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.abc.graduationproject.bean.Project">
    insert into project (projectId, projectName, promulgateName, 
      projectIntroduce, isNotValid)
    values (#{projectid,jdbcType=INTEGER}, #{projectname,jdbcType=VARCHAR}, #{promulgatename,jdbcType=VARCHAR}, 
      #{projectintroduce,jdbcType=VARCHAR}, #{isnotvalid,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.abc.graduationproject.bean.Project">
    insert into project
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="projectid != null">
        projectId,
      </if>
      <if test="projectname != null">
        projectName,
      </if>
      <if test="promulgatename != null">
        promulgateName,
      </if>
      <if test="projectintroduce != null">
        projectIntroduce,
      </if>
      <if test="isnotvalid != null">
        isNotValid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="projectid != null">
        #{projectid,jdbcType=INTEGER},
      </if>
      <if test="projectname != null">
        #{projectname,jdbcType=VARCHAR},
      </if>
      <if test="promulgatename != null">
        #{promulgatename,jdbcType=VARCHAR},
      </if>
      <if test="projectintroduce != null">
        #{projectintroduce,jdbcType=VARCHAR},
      </if>
      <if test="isnotvalid != null">
        #{isnotvalid,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.abc.graduationproject.bean.ProjectExample" resultType="java.lang.Long">
    select count(*) from project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update project
    <set>
      <if test="record.projectid != null">
        projectId = #{record.projectid,jdbcType=INTEGER},
      </if>
      <if test="record.projectname != null">
        projectName = #{record.projectname,jdbcType=VARCHAR},
      </if>
      <if test="record.promulgatename != null">
        promulgateName = #{record.promulgatename,jdbcType=VARCHAR},
      </if>
      <if test="record.projectintroduce != null">
        projectIntroduce = #{record.projectintroduce,jdbcType=VARCHAR},
      </if>
      <if test="record.isnotvalid != null">
        isNotValid = #{record.isnotvalid,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update project
    set projectId = #{record.projectid,jdbcType=INTEGER},
      projectName = #{record.projectname,jdbcType=VARCHAR},
      promulgateName = #{record.promulgatename,jdbcType=VARCHAR},
      projectIntroduce = #{record.projectintroduce,jdbcType=VARCHAR},
      isNotValid = #{record.isnotvalid,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="com.abc.graduationproject.bean.Project">
    <result column="projectId" jdbcType="INTEGER" property="projectid" />
    <result column="projectName" jdbcType="VARCHAR" property="projectname" />
    <result column="promulgateName" jdbcType="VARCHAR" property="promulgatename" />
    <result column="projectIntroduce" jdbcType="VARCHAR" property="projectintroduce" />
    <result column="isNotValid" jdbcType="BIT" property="isnotvalid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    projectId, projectName, promulgateName, projectIntroduce, isNotValid
  </sql>
  <select id="selectByExample" parameterType="com.abc.graduationproject.bean.ProjectExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.abc.graduationproject.bean.ProjectExample">
    delete from project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.abc.graduationproject.bean.Project">
    insert into project (projectId, projectName, promulgateName, 
      projectIntroduce, isNotValid)
    values (#{projectid,jdbcType=INTEGER}, #{projectname,jdbcType=VARCHAR}, #{promulgatename,jdbcType=VARCHAR}, 
      #{projectintroduce,jdbcType=VARCHAR}, #{isnotvalid,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.abc.graduationproject.bean.Project">
    insert into project
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="projectid != null">
        projectId,
      </if>
      <if test="projectname != null">
        projectName,
      </if>
      <if test="promulgatename != null">
        promulgateName,
      </if>
      <if test="projectintroduce != null">
        projectIntroduce,
      </if>
      <if test="isnotvalid != null">
        isNotValid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="projectid != null">
        #{projectid,jdbcType=INTEGER},
      </if>
      <if test="projectname != null">
        #{projectname,jdbcType=VARCHAR},
      </if>
      <if test="promulgatename != null">
        #{promulgatename,jdbcType=VARCHAR},
      </if>
      <if test="projectintroduce != null">
        #{projectintroduce,jdbcType=VARCHAR},
      </if>
      <if test="isnotvalid != null">
        #{isnotvalid,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.abc.graduationproject.bean.ProjectExample" resultType="java.lang.Long">
    select count(*) from project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update project
    <set>
      <if test="record.projectid != null">
        projectId = #{record.projectid,jdbcType=INTEGER},
      </if>
      <if test="record.projectname != null">
        projectName = #{record.projectname,jdbcType=VARCHAR},
      </if>
      <if test="record.promulgatename != null">
        promulgateName = #{record.promulgatename,jdbcType=VARCHAR},
      </if>
      <if test="record.projectintroduce != null">
        projectIntroduce = #{record.projectintroduce,jdbcType=VARCHAR},
      </if>
      <if test="record.isnotvalid != null">
        isNotValid = #{record.isnotvalid,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update project
    set projectId = #{record.projectid,jdbcType=INTEGER},
      projectName = #{record.projectname,jdbcType=VARCHAR},
      promulgateName = #{record.promulgatename,jdbcType=VARCHAR},
      projectIntroduce = #{record.projectintroduce,jdbcType=VARCHAR},
      isNotValid = #{record.isnotvalid,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="com.abc.graduationproject.bean.Project">
    <id column="projectId" jdbcType="INTEGER" property="projectid" />
    <result column="projectName" jdbcType="VARCHAR" property="projectname" />
    <result column="promulgateName" jdbcType="VARCHAR" property="promulgatename" />
    <result column="projectIntroduce" jdbcType="VARCHAR" property="projectintroduce" />
    <result column="isNotValid" jdbcType="BIT" property="isnotvalid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    projectId, projectName, promulgateName, projectIntroduce, isNotValid
  </sql>
  <select id="selectByExample" parameterType="com.abc.graduationproject.bean.ProjectExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from project
    where projectId = #{projectid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from project
    where projectId = #{projectid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.abc.graduationproject.bean.ProjectExample">
    delete from project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.abc.graduationproject.bean.Project">
    insert into project (projectId, projectName, promulgateName, 
      projectIntroduce, isNotValid)
    values (#{projectid,jdbcType=INTEGER}, #{projectname,jdbcType=VARCHAR}, #{promulgatename,jdbcType=VARCHAR}, 
      #{projectintroduce,jdbcType=VARCHAR}, #{isnotvalid,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.abc.graduationproject.bean.Project">
    insert into project
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="projectid != null">
        projectId,
      </if>
      <if test="projectname != null">
        projectName,
      </if>
      <if test="promulgatename != null">
        promulgateName,
      </if>
      <if test="projectintroduce != null">
        projectIntroduce,
      </if>
      <if test="isnotvalid != null">
        isNotValid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="projectid != null">
        #{projectid,jdbcType=INTEGER},
      </if>
      <if test="projectname != null">
        #{projectname,jdbcType=VARCHAR},
      </if>
      <if test="promulgatename != null">
        #{promulgatename,jdbcType=VARCHAR},
      </if>
      <if test="projectintroduce != null">
        #{projectintroduce,jdbcType=VARCHAR},
      </if>
      <if test="isnotvalid != null">
        #{isnotvalid,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.abc.graduationproject.bean.ProjectExample" resultType="java.lang.Long">
    select count(*) from project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update project
    <set>
      <if test="record.projectid != null">
        projectId = #{record.projectid,jdbcType=INTEGER},
      </if>
      <if test="record.projectname != null">
        projectName = #{record.projectname,jdbcType=VARCHAR},
      </if>
      <if test="record.promulgatename != null">
        promulgateName = #{record.promulgatename,jdbcType=VARCHAR},
      </if>
      <if test="record.projectintroduce != null">
        projectIntroduce = #{record.projectintroduce,jdbcType=VARCHAR},
      </if>
      <if test="record.isnotvalid != null">
        isNotValid = #{record.isnotvalid,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update project
    set projectId = #{record.projectid,jdbcType=INTEGER},
      projectName = #{record.projectname,jdbcType=VARCHAR},
      promulgateName = #{record.promulgatename,jdbcType=VARCHAR},
      projectIntroduce = #{record.projectintroduce,jdbcType=VARCHAR},
      isNotValid = #{record.isnotvalid,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.abc.graduationproject.bean.Project">
    update project
    <set>
      <if test="projectname != null">
        projectName = #{projectname,jdbcType=VARCHAR},
      </if>
      <if test="promulgatename != null">
        promulgateName = #{promulgatename,jdbcType=VARCHAR},
      </if>
      <if test="projectintroduce != null">
        projectIntroduce = #{projectintroduce,jdbcType=VARCHAR},
      </if>
      <if test="isnotvalid != null">
        isNotValid = #{isnotvalid,jdbcType=BIT},
      </if>
    </set>
    where projectId = #{projectid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.abc.graduationproject.bean.Project">
    update project
    set projectName = #{projectname,jdbcType=VARCHAR},
      promulgateName = #{promulgatename,jdbcType=VARCHAR},
      projectIntroduce = #{projectintroduce,jdbcType=VARCHAR},
      isNotValid = #{isnotvalid,jdbcType=BIT}
    where projectId = #{projectid,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.abc.graduationproject.bean.Project">
    <id column="projectId" jdbcType="INTEGER" property="projectid" />
    <result column="projectName" jdbcType="VARCHAR" property="projectname" />
    <result column="promulgateName" jdbcType="VARCHAR" property="promulgatename" />
    <result column="projectIntroduce" jdbcType="VARCHAR" property="projectintroduce" />
    <result column="isNotValid" jdbcType="BIT" property="isnotvalid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    projectId, projectName, promulgateName, projectIntroduce, isNotValid
  </sql>
  <select id="selectByExample" parameterType="com.abc.graduationproject.bean.ProjectExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from project
    where projectId = #{projectid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from project
    where projectId = #{projectid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.abc.graduationproject.bean.ProjectExample">
    delete from project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.abc.graduationproject.bean.Project">
    insert into project (projectId, projectName, promulgateName, 
      projectIntroduce, isNotValid)
    values (#{projectid,jdbcType=INTEGER}, #{projectname,jdbcType=VARCHAR}, #{promulgatename,jdbcType=VARCHAR}, 
      #{projectintroduce,jdbcType=VARCHAR}, #{isnotvalid,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.abc.graduationproject.bean.Project">
    insert into project
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="projectid != null">
        projectId,
      </if>
      <if test="projectname != null">
        projectName,
      </if>
      <if test="promulgatename != null">
        promulgateName,
      </if>
      <if test="projectintroduce != null">
        projectIntroduce,
      </if>
      <if test="isnotvalid != null">
        isNotValid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="projectid != null">
        #{projectid,jdbcType=INTEGER},
      </if>
      <if test="projectname != null">
        #{projectname,jdbcType=VARCHAR},
      </if>
      <if test="promulgatename != null">
        #{promulgatename,jdbcType=VARCHAR},
      </if>
      <if test="projectintroduce != null">
        #{projectintroduce,jdbcType=VARCHAR},
      </if>
      <if test="isnotvalid != null">
        #{isnotvalid,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.abc.graduationproject.bean.ProjectExample" resultType="java.lang.Long">
    select count(*) from project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update project
    <set>
      <if test="record.projectid != null">
        projectId = #{record.projectid,jdbcType=INTEGER},
      </if>
      <if test="record.projectname != null">
        projectName = #{record.projectname,jdbcType=VARCHAR},
      </if>
      <if test="record.promulgatename != null">
        promulgateName = #{record.promulgatename,jdbcType=VARCHAR},
      </if>
      <if test="record.projectintroduce != null">
        projectIntroduce = #{record.projectintroduce,jdbcType=VARCHAR},
      </if>
      <if test="record.isnotvalid != null">
        isNotValid = #{record.isnotvalid,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update project
    set projectId = #{record.projectid,jdbcType=INTEGER},
      projectName = #{record.projectname,jdbcType=VARCHAR},
      promulgateName = #{record.promulgatename,jdbcType=VARCHAR},
      projectIntroduce = #{record.projectintroduce,jdbcType=VARCHAR},
      isNotValid = #{record.isnotvalid,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.abc.graduationproject.bean.Project">
    update project
    <set>
      <if test="projectname != null">
        projectName = #{projectname,jdbcType=VARCHAR},
      </if>
      <if test="promulgatename != null">
        promulgateName = #{promulgatename,jdbcType=VARCHAR},
      </if>
      <if test="projectintroduce != null">
        projectIntroduce = #{projectintroduce,jdbcType=VARCHAR},
      </if>
      <if test="isnotvalid != null">
        isNotValid = #{isnotvalid,jdbcType=BIT},
      </if>
    </set>
    where projectId = #{projectid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.abc.graduationproject.bean.Project">
    update project
    set projectName = #{projectname,jdbcType=VARCHAR},
      promulgateName = #{promulgatename,jdbcType=VARCHAR},
      projectIntroduce = #{projectintroduce,jdbcType=VARCHAR},
      isNotValid = #{isnotvalid,jdbcType=BIT}
    where projectId = #{projectid,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.abc.graduationproject.bean.Project">
    <result column="projectId" jdbcType="INTEGER" property="projectid" />
    <result column="projectName" jdbcType="VARCHAR" property="projectname" />
    <result column="promulgateName" jdbcType="VARCHAR" property="promulgatename" />
    <result column="projectIntroduce" jdbcType="VARCHAR" property="projectintroduce" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    projectId, projectName, promulgateName, projectIntroduce
  </sql>
  <select id="selectByExample" parameterType="com.abc.graduationproject.bean.ProjectExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.abc.graduationproject.bean.ProjectExample">
    delete from project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.abc.graduationproject.bean.Project">
    insert into project (projectId, projectName, promulgateName, 
      projectIntroduce)
    values (#{projectid,jdbcType=INTEGER}, #{projectname,jdbcType=VARCHAR}, #{promulgatename,jdbcType=VARCHAR}, 
      #{projectintroduce,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.abc.graduationproject.bean.Project">
    insert into project
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="projectid != null">
        projectId,
      </if>
      <if test="projectname != null">
        projectName,
      </if>
      <if test="promulgatename != null">
        promulgateName,
      </if>
      <if test="projectintroduce != null">
        projectIntroduce,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="projectid != null">
        #{projectid,jdbcType=INTEGER},
      </if>
      <if test="projectname != null">
        #{projectname,jdbcType=VARCHAR},
      </if>
      <if test="promulgatename != null">
        #{promulgatename,jdbcType=VARCHAR},
      </if>
      <if test="projectintroduce != null">
        #{projectintroduce,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.abc.graduationproject.bean.ProjectExample" resultType="java.lang.Long">
    select count(*) from project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update project
    <set>
      <if test="record.projectid != null">
        projectId = #{record.projectid,jdbcType=INTEGER},
      </if>
      <if test="record.projectname != null">
        projectName = #{record.projectname,jdbcType=VARCHAR},
      </if>
      <if test="record.promulgatename != null">
        promulgateName = #{record.promulgatename,jdbcType=VARCHAR},
      </if>
      <if test="record.projectintroduce != null">
        projectIntroduce = #{record.projectintroduce,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update project
    set projectId = #{record.projectid,jdbcType=INTEGER},
      projectName = #{record.projectname,jdbcType=VARCHAR},
      promulgateName = #{record.promulgatename,jdbcType=VARCHAR},
      projectIntroduce = #{record.projectintroduce,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>